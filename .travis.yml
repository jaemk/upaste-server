# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

addons:
    postgresql: "9.5"
    apt:
        packages:
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=upaste
    - DATABASE_URL=postgres://postgres:@localhost/upaste

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=i686-unknown-linux-gnu
    #- env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    #- env: TARGET=i686-apple-darwin
    #  os: osx
    #- env: TARGET=x86_64-apple-darwin
    #  os: osx

    # *BSD
    #- env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    ## Other architectures
    #- env: TARGET=aarch64-unknown-linux-gnu
    #- env: TARGET=armv7-unknown-linux-gnueabihf
    #- env: TARGET=mips-unknown-linux-gnu
    #- env: TARGET=mips64-unknown-linux-gnuabi64
    #- env: TARGET=mips64el-unknown-linux-gnuabi64
    #- env: TARGET=mipsel-unknown-linux-gnu
    #- env: TARGET=powerpc-unknown-linux-gnu
    #- env: TARGET=powerpc64-unknown-linux-gnu
    #- env: TARGET=powerpc64le-unknown-linux-gnu
    #- env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1

    ## Testing other channels
    #- env: TARGET=x86_64-unknown-linux-gnu
    #  rust: nightly
    #- env: TARGET=x86_64-apple-darwin
    #  os: osx
    #  rust: nightly

before_install: set -e

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: pSEXWVEO4p6/9u2QHHMSbifq18E/V7gzVC97rVV5AJMO8YtH7uiEzKePlYNxRQEv88LBLnUMkhL+4xyQQigBrXWduq1ArsaJA88SoslCNfqYTSNLGcJ8r3UDHjAxEu3JB8SutMnr38iVd2d/uN/9Vy+ePR7IGNpLw9mMynX8QG8NCA13ULl4RAP1VRgldy4eXgE2JoJ1awydzk1Yjb/11LOF90FVgbairIOoaS7+C+E4lzngFofDiUXp36vjy45/3POaPZjDSSBqtenYjJ6vGuJhwO/kF83qDAbDuWQFR7nXPmDYrnx7YxeFaFXhCsVIkHazT4V2eQAugq09ajoN50lm9ljqltsO0wJV2RzZuIHCiwdAEbfN9gSxEbFTDNahoHeUB/c512blu2mthFaZfcez88U+k2q9TOqnZrG+8xhvy1RiTRgnanPAaAFayoHEGlALFN9uWLvBRxeY+2Glh/igmby+8J0VBeO9AQRvQLNPZoac0QZ/VhvN2VBJ6vdhnRCS9Bts9fh0iAMW5jZ3wNtM43PWCCQeANtOplmHn8VkR8xtQ2VbWiouJb20lALe1o2dFTCx0M6dox3wpyZysuLYj5yhqESk1YuT3XM4sa40Pcab/Y0jNDRNy3q2iiy2Gb0zb0epkAJknNcq2yzh10iA9egYOjif9MjsKFG53JE=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
